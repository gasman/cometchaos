<% javascript_tag do %>
	var gameId = <%= @game.id %>;
	var myPlayerId = <%= playing? ? me.id : 'null' %>;
	var isOperator = <%= !!(playing? and me.is_operator?) %>;
	var personalState = <%= (playing? ? me.state : 'nonplayer').to_json %>;
	var hasPendingSpell = <%= !!(playing? and me.next_spell) %>;
	var gameIsJoinable = <%= @game.joinable? %>;
	var gameIsStartable = <%= @game.startable? %>;
	var gameHasStarted = <%= !@game.open? %>;

	// setGameState(<%= @game.state.to_json %>);
	
	<% if playing? and me.casting? %>
		jq(function() {
			showCastingPositions(<%= me.casting_positions.to_json %>);
		});
	<% end %>
<% end %>

<div id="state_of_play">
	<div id="board">
	</div>
	<% javascript_tag do %>
		<%= render :partial => 'games/sprite', :collection => @game.sprites %>
		<%# TODO: Figure out how to persuade render:partial to render a file called
			# _sprite.js.erb rather than _sprite.erb, because naming conventions dictate
			# that that's what this ought to be called %>
	<% end %>
	<div id="events_panel">
		<ul id="events_list">
		</ul>
	</div>
</div>

<div id="sidebar">
	<div id="title_panel" class="panel">
		<h1>Chaos</h1>
		<h2>The Battle Of Wizards</h2>
		<h3>Game <%= @game.id %> - <span id="game_status"></span></h3>
	</div>
	
	<div id="players_panel" class="panel">
		<h2>Players</h2>
		<ul id="players_list">
			<%= render :partial => 'player', :collection => @game.players,
				:locals => {:highlight_me => true} %>
		</ul>
	
		<div class="conditional panel for_nonplayer when_game_is_joinable">
			<h2>Join this game</h2>
			<div class="join_game_form">
				<% form_for [@game, @new_player], :html => {:class => 'remote post'} do |f| %>
					<%= render :partial => 'players/form', :object => @new_player %>
					<%= f.submit 'Join' %>
				<% end %>
			</div>
		</div>
		<div class="conditional panel for_operator when_game_is_startable">
			<%= link_to 'Start game', start_game_path, :class => 'remote post' %>
		</div>
		<div class="conditional panel when_my_turn">
			<%= link_to 'End turn', end_turn_game_path, :class => 'remote post' %>
		</div>
	</div>
	
	<div id="spells_panel" class="conditional panel for_player when_game_started">
		<h2>Spells</h2>
		<ul id="spells_list">
			<% if playing? %>
				<%= render :partial => 'spells/list', :object => me.spells %>
			<% end %>
		</ul>
		<div id="spell_info_view">
		</div>
		<div id="next_spell" class="conditional panel when_has_pending_spell">
			<% if playing? and me.next_spell %>
				<%= render :partial => 'spells/chosen_spell', :object => me.next_spell %>
			<% end %>
		</div>
		<br style="clear: both;" />
	</div>
</div>

<%= meteor_strike @game.channel %>
